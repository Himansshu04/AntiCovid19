int const tPin = 6;
int const ePin = 5;
int const bPin = 13;
void setup()
{
pinMode(tPin, OUTPUT); // t pin will have pulses output
pinMode(ePin, INPUT); // e pin should be input to get pulse width
pinMode(bPin, OUTPUT); // b pin is output to control buzzer
}
void loop()
{
// Duration will be the input pulse width and distance will be the distance to the obstacle in centimeters
int duration, distance;
// Output pulse with 1ms width on tPin
digitalWrite(tPin, HIGH);
delay(1);
digitalWrite(tPin, LOW);
// Measure the pulse input in echo pin
duration = pulseIn(ePin, HIGH);
// Distance is half the duration devided by 29.1 (from datasheet)
distance = (duration/2) / 29.1;
// if distance less than 0.5 meter and more than 0 (0 or less means over range)
if (distance <= 100 && distance >= 0) {
// Buzz
digitalWrite(bPin, HIGH);
} else {
// Don't buzz
digitalWrite(bPin, LOW);
}
// Waiting 60 ms won't hurt any one
delay(60);
}
int const tPin = 4;
int const ePin = 3;
int const bPin = 2;
void setup()
{
pinMode(tPin, OUTPUT); // tpin will have pulses output
pinMode(ePin, INPUT); // epin should be input to get pulse width
pinMode(bPin, OUTPUT); // bpin is output to control buzzer
}